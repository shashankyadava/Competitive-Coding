vector<long> lps_(string &b){
        long n = b.size();
        vector<long>lps(n,0);
        int i = 1,j = 0;
        while(i<b.size()){
            if(b[i]==b[j]){
                lps[i++] = ++j;
            }
            else{
                if(j!=0){
                    j = lps[j-1];
                }
                else i++;
            }
        }
        return lps;
    }
    int findLastOccurence(string A,string B){
        vector<long>lps = lps_(B);
        int i = 0,j = 0;
        int n = A.size(),m = B.size();
        int ans = -1;
        while((n-i)>=(m-j)){
            if(A[i]==B[j]){
                i++,j++;
            }
            if(j==m){
                ans = i-j+1;
                j = lps[m-1];
            }
            else if(i<n&&A[i]!=B[j]){
                if(j!=0){
                    j = lps[j-1];
                }
                else i++;
            }
        }
        return ans;
    }
