class dijktra{
    int solve(){
        int dist[1000];
        vector<pair<int,int>>graph[1000];// in graph first contains the node and second 
                                        // contain the weight
        priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>>q;
        vector<int>dist(1000,1e9);
        q.push({0,1});
        dist[1] = 0;
        while(!q.empty()){
            int parent = q.top().second;
            int distance = q.top().first;
            q.pop();
            for(pair<int,int> child: graph[parent]){
                if(distance+child.second<dist[child.first]){
                    dist[child.first] = distance+child.second;
                    q.push({dist[child.first],child.first});
                }
            }
        }
        for(int i = 0; i<=100; i++){
            // printing the distances 
            cout<<dist[i]<<" ";
        }
        cout<<endl;
    }
};
