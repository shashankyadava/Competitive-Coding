

                                                                            A. Transformation: from A to B
                                                                            time limit per test1 second
                                                                            memory limit per test256 megabytes
                                                                            inputstandard input
                                                                            outputstandard output
                                                                            
Vasily has a number a, which he wants to turn into a number b. For this purpose, he can do two types of operations:

multiply the current number by 2 (that is, replace the number x by 2·x);
append the digit 1 to the right of current number (that is, replace the number x by 10·x + 1).
You need to help Vasily to transform the number a into the number b using only the operations described above, or find that it is impossible.

Note that in this task you are not required to minimize the number of operations. It suffices to find any way to transform a into b.

Input
The first line contains two positive integers a and b (1 ≤ a < b ≤ 109) — the number which Vasily has and the number he wants to have.

Output
If there is no way to get b from a, print "NO" (without quotes).

Otherwise print three lines. On the first line print "YES" (without quotes). The second line should contain single integer k — the length of the transformation sequence. On the third line print the sequence of transformations x1, x2, ..., xk, where:

x1 should be equal to a,
xk should be equal to b,
xi should be obtained from xi - 1 using any of two described operations (1 < i ≤ k).
If there are multiple answers, print any of them.

Examples
inputCopy
2 162
outputCopy
YES
5
2 4 8 81 162 
inputCopy
4 42
outputCopy
NO
inputCopy
100 40021
outputCopy
YES
5
100 200 2001 4002 40021 

CODE::

#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define sky LONG_LONG_MAX
#define ajen LONG_LONG_MIN
#define mod 1000000007
#define modulo 998244353
ll a,b,cnt;
bool flag = false;
ll aray[100005];
void dfs(ll child,ll pos){
    aray[pos] = child;
    if(child==b){
        flag = true;
        cnt = pos;
        return;
    }
    if(child>=b){
        return;
    }
    dfs(child*2,pos+1);
    if(flag)return;
    dfs(child*10+1,pos+1);
}
int main(){
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cin>>a>>b;
    dfs(a,0);
    if(flag){
        cout<<"YES"<<endl;
        cout<<cnt+1<<endl;
        for(int i = 0; i<=cnt; i++){
            cout<<aray[i]<<" ";
        }
        cout<<endl;
    }
    else cout<<"NO"<<endl;
    return 0;
}
