#include <bits/stdc++.h> 
// int dp[1001][1001];
// int recur(int i,int j,int n,int m){
//     if(i>n||j>m) return dp[i][j] = 0;
//     if(i==n&&j==m) return dp[i][j] = 1;
//     if(dp[i][j]!=-1)return dp[i][j];
//     return dp[i][j] = recur(i+1,j,n,m)+recur(i,j+1,n,m);
// }
int uniquePaths(int m, int n) {
//     memset(dp,0,sizeof(dp));
// 	return recur(1,1,n,m);
    int dp[n+1][m+1];
    for(int i = 0; i<=n; i++){
        for(int j = 0; j<=m; j++){
            dp[i][j] = 0;
        }
    }
    for(int i = n; i>=1; i--){
        for(int j = m; j>=1; j--){
            if(i==n&&j==m)dp[i][j] = 1;
            if(i<=n-1)dp[i][j]+=dp[i+1][j];
            if(j<=m-1)dp[i][j]+=dp[i][j+1];
        }
    }
    return dp[1][1];
}
