#include<bits/stdc++.h>
using namespace std;
#define ll long long
vector<int>g[100005];
vector<int>c(100005);
vector<int>visited(100005);
int dfs(int parent,int color){
    c[parent] = color;
    visited[parent] = 1;
    int ans = 1;
    for(auto child:g[parent]){
        if(!visited[child]){
            ans = dfs(child,color^1);
        }
        else if(c[child]==c[parent]){
            return 0; 
        }
    }
    return ans;
}
int main(){
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    ll n,m; cin>>n>>m;
    for(int i = 0; i<m; i++){
        int x,y; cin>>x>>y;
        g[x].push_back(y);
        g[y].push_back(x);
    }
    int ans = 1;
    for(int i = 0; i<=n; i++)visited[i] = 0;
    for(int i = 1; i<=n; i++){
        if(!visited[i]){
           ans = ans&dfs(i,1);
           if(ans==0){
                break;
           }
        }
    }
    if(ans==0)cout<<"IMPOSSIBLE"<<endl;
    else{
        for(int i = 1; i<=n; i++){
            cout<<(c[i]==1?1:2)<<" ";
        }
        cout<<endl;
    }
    return 0;
}
