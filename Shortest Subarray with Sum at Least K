class Solution {
public:
    int shortestSubarray(vector<int>& v, int k) {
        int n = v.size();
        vector<long>nums;
        for(int i = 0; i<n; i++)nums.push_back(v[i]);
        deque<long>q;
        long count = INT_MAX;
        for(long i = 0; i<n; i++){
            if(i>0)nums[i]+=nums[i-1];
            if(nums[i]>=k)count = min(count,i+1);
            while(q.size()>0&&nums[i]-nums[q.front()]>=k){
                count = min(count,i-q.front());
                q.pop_front();
            }
            while(q.size()>0&&nums[i]<=nums[q.back()])q.pop_back();
            q.push_back(i);
        }
        return (count==INT_MAX?-1:count);
    }
};
