#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define mod 1000000007
map<ll,ll>dp;
// ll dp2[100005];
// int recur(vector<ll>v,ll n,ll sum){
//     if(sum==0)return 1;
//     if(sum<0)return 0;
//     if(dp[sum]!=-1)return dp[sum];
//     ll ans = 0;
//     for(int i = 0; i<n; i++){
//         ans =(ans%mod+recur(v,n,sum-v[i]%mod))%mod;
//     }
//     return dp[sum] = ans%mod;
// }
ll solve(ll sum,ll k,vector<ll>dp,vector<ll>b){
    dp[0] = 1; 
    for(int i = 1; i<=sum; i++){
        ll ans = 0;
        for(int j = 0; j<k; j++){
            ans = (ans+dp[i])%mod;
            if(i-b[j]>=0){
                ans = (ans+dp[i-b[j]])%mod;
            }
        }
        dp[i] = ans%mod;
    }
    return dp[sum]%mod;
}
int main(){
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    // memset(dp,-1,sizeof(dp));
    // memset(dp2,-1,sizeof(dp2));
    ll n,k,d; cin>>n>>k>>d;
    for(int i = 0; i<=n; i++){
        dp[i] = -1;
    }
    vector<ll>dp(n+1,0);
    vector<ll>b(k);
    ll sum = n;
    for(int i = 0; i<k; i++){
        b[i] = i+1;
    }
    vector<ll>a(d-1);
    for(int i = 0; i<d-1; i++){
        a[i] = i+1;
    }
    ll ans = solve(n,k,dp,b);
    ll res = solve(n,d-1,dp,a);
    cout<<(ans-res+mod)%mod<<endl;
    return 0;
}
