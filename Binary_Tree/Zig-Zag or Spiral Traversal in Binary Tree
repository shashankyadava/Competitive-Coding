/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        vector<vector<int>>ans;
        if(root==NULL)return ans;
        queue<TreeNode*>q;
        q.push(root);
        bool flag = true;
        while(!q.empty()){
            int n = q.size();
            vector<int>temp(n);
            for(int i = 0; i<n; i++){
                TreeNode* parent = q.front();
                q.pop();
                int indx = (flag==true?i:n-1-i);
                temp[indx] = parent->val;
                if(parent->left)q.push(parent->left);
                if(parent->right)q.push(parent->right);
            }
            flag = !flag;
            ans.push_back(temp);
        }
        return ans;
    }
};
